{"version":3,"sources":["MyComponents/Header.js","MyComponents/TodoItem.js","MyComponents/ToDos.js","MyComponents/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","searchBar","placeholder","ToDos","todos","map","todo","Footer","App","sno","desc","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAGe,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAU,gDAAf,SACA,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,SAGGF,EAAMG,QAGT,wBACEF,UAAU,iBACVG,KAAK,SACLC,iBAAe,WACfC,iBAAe,0BACfC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,oBAPb,SASE,sBAAMR,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BS,GAAG,yBAA7C,UACE,qBAAIT,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkBU,eAAa,OAAOT,KAAK,IAAxD,oBAIF,oBAAID,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,wBAQHF,EAAMY,UACP,uBAAMX,UAAU,SAAhB,UACE,uBACEA,UAAU,oBACVG,KAAK,SACLS,YAAY,SACZJ,aAAW,WAEb,wBAAQR,UAAU,0BAA0BG,KAAK,SAAjD,uBAKA,WCnDP,ICCMU,EAAQ,SAACd,GAClB,OACI,sBAAKC,UAAU,YAAf,UACI,oBAAIA,UAAU,mBAAd,yBAECD,EAAMe,MAAMC,KAAI,SAACC,WCNjBC,EAAS,WAClB,OACI,gDCiCOC,MA/Bf,WAmBE,OACE,gCAEE,cAACpB,EAAD,CAAQI,MAAM,sBAAsBS,WAAW,IAE/C,cAAC,EAAD,CAAOG,MAvBD,CACR,CACIK,IAAK,EACLjB,MAAO,eACPkB,KAAM,yCAEV,CACID,IAAK,EACLjB,MAAO,aACPkB,KAAM,yCAEV,CACID,IAAK,EACLjB,MAAO,eACPkB,KAAM,4CAUR,cAAC,EAAD,QCnBSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6a0cf2b6.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n              \r\n              {/* fetching title from Parent File app.js and <Header/> */}\r\n            {props.title}\r\n\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  About\r\n                </a>\r\n              </li>\r\n            </ul>\r\n\r\n{/* Using Ternary Operator:\r\nFetching Decision from Parent File and <searchBar/> , if it's true, it will run */}\r\n            {props.searchBar ?\r\n            <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n// otherwise it will be empty\r\n            : \"\"\r\n            }\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\n// Agr Deault Title Show krwana Ho Tou Parent File Se Remove kr k idhr Display kr Dena\r\n\r\n// Header.defaultProps ={\r\n//     title: \"Your Title Here\"\r\n// searchBar: \"false\"\r\n// }\r\n\r\n\r\n// Will ONly get String, if We Add Int or Float, it will show error in console\r\nHeader.propTypes ={\r\n    title: PropTypes.string \r\n    // searchBar: PropTypes.bool \r\n}","import React from 'react'\r\n\r\nexport const TodoItem = ({todo}) => {\r\n    return (\r\n        <div>\r\n            <h4>{todo.title}</h4>\r\n            <p>{todo.desc}</p>\r\n            <button className=\"btn btn-sm btn-danger\">Delete</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {TodoItem} from './TodoItem';\r\n\r\nexport const ToDos = (props) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h3 className=\"text-center mt-5\">To Dos List</h3>\r\n\r\n            {props.todos.map((todo)=>{\r\n                return\r\n                <div>\r\n                                <TodoItem todo={todo} />\r\n                </div>\r\n                // <TodoItem todo={todo} onDelete={onDelete} />\r\n            })\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div>\r\n            Footer Works\r\n        </div>\r\n    )\r\n}\r\n","import \"./App.css\";\nimport Header from './MyComponents/Header';\nimport {ToDos} from './MyComponents/ToDos';\nimport {TodoItem} from './MyComponents/TodoItem';\nimport {Footer} from './MyComponents/Footer';\n\nfunction App() {\n  let todos=[\n    {\n        sno: 1,\n        title: \"Go to Market\",\n        desc: \"go and buy things from Market, Task 1\"    \n    },\n    {\n        sno: 2,\n        title: \"Go to Mall\",\n        desc: \"go and buy things from Market, Task 2\"    \n    },\n    {\n        sno: 3,\n        title: \"Go to Bazar \",\n        desc: \"go and buy things from Market, Task 3\"    \n    },\n]\n\n  return (\n    <div>\n\n      <Header title=\"To-Do List by Noman\" searchBar={false} />\n\n      <ToDos todos={todos}/>\n      <Footer/>\n\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}